STEP1: 
//nodejs command promt//
cd ___(copy path of folder)
ng new Employee
cd Employee
ng serve


STEP 2:
ng generate service employee
ng generate service insert
ng generate service delete
ng generate service update

STEP 3: //Edit all files//


1. AddComponent.ts


import { Component, OnInit } from '@angular/core';
import { EmployeeService } from './employee.service'; 
import { HttpClient } from '@angular/common/http'; 
import { UpdateService } from './update.service';
import { DeleteService } from './delete.service';


@Component({
  selector: 'app-root',
  templateUrl: './app.component.html',
  styleUrls: ['./app.component.css']
})
export class AppComponent implements OnInit {  
  public studs: any[]=[{}];
  public up: any[]= [{}]; 
  public dl: any[]= [{}];
  public EmpID: number= 3;
  public FirstName: string= "Nisha";
  public Job: string= "Salesman";
  public Loc: string= "Mumbai";

  public EmpID2: number= 3;
 public FirstName2: string= "Nisha";
 public Job2: string= "Salesman";
 public Loc2: string= "Mumbai";

  constructor(private employee: EmployeeService, private update: UpdateService, private dell: DeleteService){  

        this.employee.getPosts().subscribe((data: any[]) => {
             this.studs = data;
       console.log(data);  
        });

      this.update.getPosts1(this.EmpID, this.FirstName, this.Job, this.Loc).subscribe((data1: any[]) => {
        this.up= data1;
  console.log(data1);  
});

  this.dell.getPosts2(this.EmpID2, this.FirstName2, this.Job2, this.Loc2).subscribe((data1: any[]) => {
    this.dl= data1;
console.log(data1);  

  }); 
  //  constructor(private stud: Service){  
  //           this.stud.getPosts().subscribe((data: any[]) => {
  //                this.studs = data;
	//          console.log(data);  
	//     }); 
}
    ngOnInit() { }
  
  }
  







2. AddCOmponent.html



<!DOCTYPE html>
<html>
<head>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f7f7f7;
        }

        h1 {
            text-align: center;
            color: #333;
        }

        table {
            width: 100%;
            border-collapse: collapse;
            background-color: #fff;
            margin: 20px auto;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        table, th, td {
            border: 1px solid #ddd;
        }

        th {
            background-color: #3498db;
            color: #fff;
        }

        th, td {
            padding: 10px;
            text-align: left;
        }

        tr:nth-child(even) {
            background-color: #f2f2f2;
        }

        tr:hover {
            background-color: #e0e0e0;
        }
    </style>
</head>
<body>
    <h1>Employee List</h1>

    <h2>Employee Details (JSON)</h2>
    <table>
        <thead>
            <tr>
                <th>EmpID</th>
                <th>First Name</th>
                <th>Job</th>
                <th>Location</th>
            </tr>
        </thead>
        <tbody>
            <tr *ngFor="let s of studs">
                <td>{{s.empID}}</td>
                <td>{{s.firstName}}</td>
                <td>{{s.job}}</td>
                <td>{{s.loc}}</td>
            </tr>
        </tbody>
    </table>

    <hr>

    <h2>Employee List (JSON)</h2>
    <table>
        <thead>
            <tr>
                <th>Employee</th>
            </tr>
        </thead>
        <tbody>
            <tr *ngFor="let s of studs">
                <td>{{s | json}}</td>
            </tr>
        </tbody>
    </table>
</body>
















<!DOCTYPE html>
<html>
<head>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f7f7f7;
        }

        h1 {
            text-align: center;
            color: #333;
        }

        table {
            width: 80%; /* Reduce table width to make it more compact */
            margin: 20px auto;
            border-collapse: collapse;
            background-color: #fff;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        th, td {
            padding: 8px;
            text-align: center;
        }

        th {
            background-color: #3498db;
            color: #fff;
        }

        th:first-child, td:first-child {
            text-align: left; /* Left-align the first column */
        }

        tr:nth-child(even) {
            background-color: #f2f2f2;
        }

        tr:hover {
            background-color: #e0e0e0;
        }
    </style>
</head>
<body>
    <h1>Employee List</h1>

    <h2>Employee Details (JSON)</h2>
    <table>
        <thead>
            <tr>
                <th>EmpID</th>
                <th>First Name</th>
                <th>Job</th>
                <th>Location</th>
            </tr>
        </thead>
        <tbody>
            <tr *ngFor="let u of up">
                <td>{{u.empID}}</td>
                <td>{{u.firstName}}</td>
                <td>{{u.job}}</td>
                <td>{{u.loc}}</td>
            </tr>
        </tbody>
    </table>

    <hr>

    <h2>Employee List (JSON)</h2>
    <table>
        <thead>
            <tr>
                <th>Employee</th>
            </tr>
        </thead>
        <tbody>
            <tr *ngFor="let u of up">
                <td>{{u | json}}</td>
            </tr>
        </tbody>
    </table>
</body>
</html>











<!DOCTYPE html>
<html>
<head>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f7f7f7;
        }

        h1 {
            text-align: center;
            color: #333;
        }

        table {
            width: 100%;
            border-collapse: collapse;
            background-color: #fff;
            margin: 20px auto;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        table, th, td {
            border: 1px solid #ddd;
        }

        th {
            background-color: #3498db;
            color: #fff;
        }

        th, td {
            padding: 10px;
            text-align: left;
        }

        tr:nth-child(even) {
            background-color: #f2f2f2;
        }

        tr:hover {
            background-color: #e0e0e0;
        }
    </style>
</head>
<body>
    <h1>Employee List</h1>

    <h2>DELETE (JSON)</h2>
    <table>
        <thead>
            <tr>
                <th>EmpID</th>
                <th>First Name</th>
                <th>Job</th>
                <th>Location</th>
            </tr>
        </thead>
        <tbody>
            <tr *ngFor="let d of dl">
                <td>{{d.empID}}</td>
                <td>{{d.firstName}}</td>
                <td>{{d.job}}</td>
                <td>{{d.loc}}</td>
            </tr>
        </tbody>
    </table>

    <hr>

    <h2>Employee List (JSON)</h2>
    <table>
        <thead>
            <tr>
                <th>Employee</th>
            </tr>
        </thead>
        <tbody>
            <tr *ngFor="let d of dl">
                <td>{{d | json}}</td>
            </tr>
        </tbody>
    </table>
</body>



3. appmodule.ts


import { NgModule,  NO_ERRORS_SCHEMA} from '@angular/core';
import { BrowserModule } from '@angular/platform-browser';
import { FormsModule } from '@angular/forms';
import { EmployeeService } from './employee.service';
import { UpdateService } from './update.service';


import { AppRoutingModule } from './app-routing.module';
import { AppComponent } from './app.component';
import { HttpClientModule } from '@angular/common/http';
import { DeleteService } from './delete.service';
// import { AddEmployeeComponent } from './add-employee/add-employee.component';
// import { RemoveEmployeeComponent } from './remove-employee/remove-employee.component';
// import { UpdateEmployeeComponent } from './update-employee/update-employee.component';
// import { ReadEmployeeComponent } from './read-employee/read-employee.component';

@NgModule({
  declarations: [
    AppComponent,
    // AddEmployeeComponent,
    // RemoveEmployeeComponent,
    // UpdateEmployeeComponent,
    // ReadEmployeeComponent
  ],
  imports: [
    BrowserModule,
    FormsModule,
    AppRoutingModule,
    HttpClientModule
  ],
  providers: [EmployeeService, UpdateService, DeleteService],
  schemas: [NO_ERRORS_SCHEMA],  
  bootstrap: [AppComponent]
})
export class AppModule { }




4. deleteservice.ts


import { Injectable } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { Observable } from 'rxjs';

@Injectable({
  providedIn: 'root'
})
export class DeleteService {

 
  // apiurl= 'https://localhost:44327/api/Emp';

  constructor(private httpClient:HttpClient) { }
  getPosts2(EmpID: number, FirstName: string, JOB: string, LOC: string): Observable<any[]> {
     return this.httpClient.get<any[]>("https://localhost:44327/api/Emp/DeleteEmployees");
}
}



5. employeeservice.ts


import { Injectable } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { Observable } from 'rxjs';


@Injectable({
  providedIn: 'root'
})


 export class EmployeeService {
 apiurl= 'https://localhost:44327/api/Emp';
  constructor(private httpClient:HttpClient) { }
   getPosts(): Observable<any[]> {
    return this.httpClient.get<any[]>('https://localhost:44327/api/Emp/Emps');

   }
  }

      
// export class EmployeeService {  
//   url = 'http://localhost:44327/Api/Emp';  
//   constructor(private http: HttpClient) { }  
//   getPosts(): Observable<any[]> {  
//     return this.http.get<any[]>(this.url + '/Emps');  
//   }  
//   }



  // getPosts1(EmpID: number, FirstName: string, JOB: string, LOC: string): Observable<any> {
  //   //  return this.httpClient.get<any>("https://localhost:44327/api/Emp/updateEmp/"+EmpID+"/"+FirstName+"/"+JOB+"/"+LOC);
  //    return this.httpClient.get<any>(`https://localhost:44327/api/Emp/updateEmp/1/Ria/Clerk1/Mumbai`);
  // }






6. Updateservice.ts

import { Injectable } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { Observable } from 'rxjs';

@Injectable({
  providedIn: 'root'
})
export class UpdateService {

  apiurl= 'https://localhost:44327/api/Emp';

  constructor(private httpClient:HttpClient) { }
  getPosts1(EmpID: number, FirstName: string, JOB: string, LOC: string): Observable<any[]> {
     return this.httpClient.get<any[]>("https://localhost:44327/api/Emp/updateEmp/"+EmpID+"/"+FirstName+"/"+JOB+"/"+LOC);
}
}




